/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./api/context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  InOrOutEnum: "IN" | "OUT"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  AccessToken: { // root type
    accessToken?: string | null; // String
    item_id?: string | null; // String
    request_id?: string | null; // String
  }
  LinkToken: { // root type
    expiration?: string | null; // String
    link_token?: string | null; // String
    request_id?: string | null; // String
  }
  Mutation: {};
  Query: {};
  Transaction: { // root type
    accountName: string; // String!
    amount: number; // Float!
    category?: string | null; // String
    date: number; // Int!
    id: number; // Int!
    io: NexusGenEnums['InOrOutEnum']; // InOrOutEnum!
    name: string; // String!
    reference?: string | null; // String
    senderOrRecipientName: string; // String!
    userId: number; // Int!
  }
  User: { // root type
    email: string; // String!
    firstName?: string | null; // String
    id: number; // Int!
    lastName?: string | null; // String
    password?: string | null; // String
    phone?: string | null; // String
    transactions: Array<NexusGenRootTypes['Transaction'] | null>; // [Transaction]!
    uid: string; // String!
    username: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  AccessToken: { // field return type
    accessToken: string | null; // String
    item_id: string | null; // String
    request_id: string | null; // String
  }
  LinkToken: { // field return type
    expiration: string | null; // String
    link_token: string | null; // String
    request_id: string | null; // String
  }
  Mutation: { // field return type
    createLinkToken: NexusGenRootTypes['LinkToken'] | null; // LinkToken
    createUser: NexusGenRootTypes['User']; // User!
    deleteUser: NexusGenRootTypes['User']; // User!
    emailSignIn: NexusGenRootTypes['User']; // User!
    exchangePublicToken: NexusGenRootTypes['AccessToken'] | null; // AccessToken
    seedTransactions: boolean; // Boolean!
    updateUserDetails: NexusGenRootTypes['User']; // User!
  }
  Query: { // field return type
    allTransactions: NexusGenRootTypes['Transaction'][]; // [Transaction!]!
    getTransactionById: NexusGenRootTypes['Transaction']; // Transaction!
    getTransactionsByUserId: Array<NexusGenRootTypes['Transaction'] | null>; // [Transaction]!
    user: NexusGenRootTypes['User']; // User!
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  Transaction: { // field return type
    accountName: string; // String!
    amount: number; // Float!
    category: string | null; // String
    date: number; // Int!
    id: number; // Int!
    io: NexusGenEnums['InOrOutEnum']; // InOrOutEnum!
    name: string; // String!
    reference: string | null; // String
    senderOrRecipientName: string; // String!
    userId: number; // Int!
  }
  User: { // field return type
    email: string; // String!
    firstName: string | null; // String
    id: number; // Int!
    lastName: string | null; // String
    password: string | null; // String
    phone: string | null; // String
    transactions: Array<NexusGenRootTypes['Transaction'] | null>; // [Transaction]!
    uid: string; // String!
    username: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  AccessToken: { // field return type name
    accessToken: 'String'
    item_id: 'String'
    request_id: 'String'
  }
  LinkToken: { // field return type name
    expiration: 'String'
    link_token: 'String'
    request_id: 'String'
  }
  Mutation: { // field return type name
    createLinkToken: 'LinkToken'
    createUser: 'User'
    deleteUser: 'User'
    emailSignIn: 'User'
    exchangePublicToken: 'AccessToken'
    seedTransactions: 'Boolean'
    updateUserDetails: 'User'
  }
  Query: { // field return type name
    allTransactions: 'Transaction'
    getTransactionById: 'Transaction'
    getTransactionsByUserId: 'Transaction'
    user: 'User'
    users: 'User'
  }
  Transaction: { // field return type name
    accountName: 'String'
    amount: 'Float'
    category: 'String'
    date: 'Int'
    id: 'Int'
    io: 'InOrOutEnum'
    name: 'String'
    reference: 'String'
    senderOrRecipientName: 'String'
    userId: 'Int'
  }
  User: { // field return type name
    email: 'String'
    firstName: 'String'
    id: 'Int'
    lastName: 'String'
    password: 'String'
    phone: 'String'
    transactions: 'Transaction'
    uid: 'String'
    username: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createUser: { // args
      email: string; // String!
      firstName?: string | null; // String
      lastName?: string | null; // String
      password?: string | null; // String
      phone?: string | null; // String
      uid: string; // String!
      username: string; // String!
    }
    deleteUser: { // args
      id: number; // Int!
    }
    emailSignIn: { // args
      password: string; // String!
      username: string; // String!
    }
    exchangePublicToken: { // args
      public_token: string; // String!
      userId: number; // Int!
    }
    seedTransactions: { // args
      userId: number; // Int!
    }
    updateUserDetails: { // args
      email: string; // String!
      firstName?: string | null; // String
      id: number; // Int!
      lastName?: string | null; // String
      password?: string | null; // String
      phone?: string | null; // String
      uid: string; // String!
      username: string; // String!
    }
  }
  Query: {
    getTransactionById: { // args
      id: number; // Int!
    }
    getTransactionsByUserId: { // args
      userId: number; // Int!
    }
    user: { // args
      uid: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}